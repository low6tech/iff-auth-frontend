/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignoutImport } from './routes/signout'
import { Route as RegisterImport } from './routes/register'
import { Route as IndexImport } from './routes/index'
import { Route as AuthResetImport } from './routes/auth/reset'
import { Route as AuthForgotPasswordIndexImport } from './routes/auth/forgot-password/index'

// Create/Update Routes

const SignoutRoute = SignoutImport.update({
  id: '/signout',
  path: '/signout',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthResetRoute = AuthResetImport.update({
  id: '/auth/reset',
  path: '/auth/reset',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordIndexRoute = AuthForgotPasswordIndexImport.update({
  id: '/auth/forgot-password/',
  path: '/auth/forgot-password/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/signout': {
      id: '/signout'
      path: '/signout'
      fullPath: '/signout'
      preLoaderRoute: typeof SignoutImport
      parentRoute: typeof rootRoute
    }
    '/auth/reset': {
      id: '/auth/reset'
      path: '/auth/reset'
      fullPath: '/auth/reset'
      preLoaderRoute: typeof AuthResetImport
      parentRoute: typeof rootRoute
    }
    '/auth/forgot-password/': {
      id: '/auth/forgot-password/'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/register': typeof RegisterRoute
  '/signout': typeof SignoutRoute
  '/auth/reset': typeof AuthResetRoute
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/register': typeof RegisterRoute
  '/signout': typeof SignoutRoute
  '/auth/reset': typeof AuthResetRoute
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/register': typeof RegisterRoute
  '/signout': typeof SignoutRoute
  '/auth/reset': typeof AuthResetRoute
  '/auth/forgot-password/': typeof AuthForgotPasswordIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/register'
    | '/signout'
    | '/auth/reset'
    | '/auth/forgot-password'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/register' | '/signout' | '/auth/reset' | '/auth/forgot-password'
  id:
    | '__root__'
    | '/'
    | '/register'
    | '/signout'
    | '/auth/reset'
    | '/auth/forgot-password/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RegisterRoute: typeof RegisterRoute
  SignoutRoute: typeof SignoutRoute
  AuthResetRoute: typeof AuthResetRoute
  AuthForgotPasswordIndexRoute: typeof AuthForgotPasswordIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RegisterRoute: RegisterRoute,
  SignoutRoute: SignoutRoute,
  AuthResetRoute: AuthResetRoute,
  AuthForgotPasswordIndexRoute: AuthForgotPasswordIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/register",
        "/signout",
        "/auth/reset",
        "/auth/forgot-password/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/signout": {
      "filePath": "signout.tsx"
    },
    "/auth/reset": {
      "filePath": "auth/reset.tsx"
    },
    "/auth/forgot-password/": {
      "filePath": "auth/forgot-password/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
